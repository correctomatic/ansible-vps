# This file has the changes made by Let's Encrypt Certbot to the original configuration file
# Please update it when you change the production file

server {
    server_name {{ registry.domain }};

    # Maximum file upload size
    client_max_body_size {{ registry.max_upload_size }};

    # To add basic authentication to v2 use auth_basic setting.
    auth_basic "Correctomatic registry";
    auth_basic_user_file /etc/docker/htpasswd;

    location / {
        proxy_pass http://localhost:{{ registry.internal_port }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /v2/ {
        proxy_pass http://localhost:{{ registry.internal_port }};
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # These headers are required for Docker to trust the registry
        # certificate and enable client-side certificate validation
        proxy_ssl_verify on;
        proxy_ssl_trusted_certificate /etc/letsencrypt/live/{{ registry.domain }}/fullchain.pem;
        proxy_ssl_session_reuse off;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/{{ registry.domain }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ registry.domain }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = {{ registry.domain }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name {{ registry.domain }};
    return 404; # managed by Certbot
}
